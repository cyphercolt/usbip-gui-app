name: Test Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.12'

jobs:
  test-build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create virtual environment
      run: |
        python -m venv venv
        
    - name: Install dependencies
      run: |
        .\venv\Scripts\activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test Windows build
      run: |
        .\venv\Scripts\activate
        cd build-configs
        pyinstaller USB-IP-GUI.spec --clean
        
    - name: Verify Windows executable
      run: |
        if (Test-Path "build-configs\dist\USB-IP-GUI.exe") {
          Write-Host "‚úÖ Windows executable created successfully"
          $size = (Get-Item "build-configs\dist\USB-IP-GUI.exe").Length / 1MB
          Write-Host "üìä Executable size: $([math]::Round($size, 1)) MB"
        } else {
          Write-Host "‚ùå Windows executable not found"
          exit 1
        }
        
  test-build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python3-venv
        
    - name: Create virtual environment
      run: |
        python3 -m venv venv
        
    - name: Install dependencies
      run: |
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test Linux build
      run: |
        source venv/bin/activate
        cd build-configs
        pyinstaller USB-IP-GUI-linux.spec --clean
        
    - name: Verify Linux executable
      run: |
        if [ -f "build-configs/dist/USB-IP-GUI" ]; then
          echo "‚úÖ Linux executable created successfully"
          size=$(du -m build-configs/dist/USB-IP-GUI | cut -f1)
          echo "üìä Executable size: ${size} MB"
        else
          echo "‚ùå Linux executable not found"
          exit 1
        fi
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length set to 120
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        
    - name: Check code formatting with black
      run: |
        black --check --diff src/
